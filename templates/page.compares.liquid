{{ 'swiper.css' | asset_url | stylesheet_tag }}
{{ 'swiper.js' | asset_url | script_tag }}
{{ page.content }}
<h2 style="text-align: center;">{{page.title}}</h2>
<style>
    .page-widths {
        max-width: 1800px;
        width: 100%;
        margin: 0 auto;
    }

    .product-list {
        list-style: none;
        padding: 0;
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    select {
        margin: 10px 0;
    }

    .product {
        margin: 10px;
        flex: 0 0 calc(25% - 20px);
        /* 每个产品宽度为 25% - margin */
        box-sizing: border-box;
        /* 包括边框在内的宽度计算 */
    }

    .product-header {
        text-align: center;
    }

    .product-header img {
        max-width: 100%;
        /* 图片最大宽度为 100% */
        height: auto;
    }

    .product-title {
        font-size: 16px;
        font-weight: bold;
    }

    .product-params span {
        display: block;
        text-align: center;
        margin: 3px 0;
        border: 1px solid #ddd;
        padding: 7px 0;
    }

    .swiper-container {
        width: 100%;
        /* flex: 0 0 auto; */
        position: relative;
        height: 100%;
        background: #f5f5f5;
        border: solid 1px rgba(0, 0, 0, .1);
    }

    .swiper-container {
        --swiper-navigation-size: 20px;
    }

    .product-info img,
    .sp_product img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: contain;
        z-index: 10;
        /* padding: 10px 0 20px 0; */
        margin: 0 auto;
    }

    .close-btn {
        position: absolute;
        top: 4px;
        right: 4px;
        z-index: 10;
        background: #fff;
        font-size: 18px;
    }

    @media (max-width: 1200px) {
        .product {
            flex: 0 0 calc(33.33% - 20px);
            /* 在屏幕较小的情况下，每个产品宽度为 33.33% - margin */
        }
    }

    @media (max-width: 800px) {
        .product {
            flex: 0 0 calc(50% - 20px);
            /* 在屏幕更小的情况下，每个产品宽度为 50% - margin */
        }
    }

    @media (max-width: 600px) {
        .product {
            flex: 0 0 calc(100% - 20px);
            /* 在屏幕非常小的情况下，每个产品宽度为 100% - margin */
        }
    }
</style>
<style>
    ul {
        margin: 0;
        padding: 0;
    }

    li {
        list-style: none;
    }

    .sp_compare_tbl {
        max-width: 1500px;
        margin: 0 auto;
    }

    .sp_compare_tbl .sa_border {
        display: inline-block;
        width: 100%;
        border-left: 1px solid #cccccc !important;
        position: relative;
    }

    .sp_compare_tbl ul.sp_product_heading,
    .sp_compare_tbl ul.sp_product_con {
        padding: 0 !important;
        margin: 0 !important;
        border-top: 1px solid #cccccc;
    }

    .sp_compare_tbl .sp_product_heading {
        width: 10%;
        float: left;
    }

    .sp_compare_tbl .sp_product {
        display: table;
        width: 90%;
        table-layout: fixed;
    }

    .sp_compare_tbl .sp_product_con {
        display: table-cell;
        width: 25%;
        word-break: break-all;
    }

    .sp_compare_tbl ul.sp_product_heading>li {
        font-weight: bold;
        background: #f5f5f5 !important;
    }

    .sp_compare_tbl ul.sp_product_heading>li,
    .sp_compare_tbl ul.sp_product_con>li {
        word-wrap: break-word;
        float: left;
        padding: 12px;
        margin: 0 !important;
        list-style: none;
        display: inline-block;
        width: 100%;
        border-bottom: 1px solid #cccccc !important;
        border-right: 1px solid #cccccc !important;
        position: relative;
        word-break: initial;
        /* height: 50px; */
        overflow: hidden;
    }

    .sp_product_con .sp_image {
        display: flex !important;
        flex-direction: column;
    }

    .sp_product_con p.sp_add_title {
        font-weight: bold;
        text-align: center;
        padding-bottom: 5px;
        border-bottom: 1px solid #ccc;
        margin: 0px;
        line-height: 20px;
        color: #333;
    }

    .sp_compare_tbl * {
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        font-size: 13px;
        color: #333;
        text-align: center;
    }

    .sp_product .product-info {
        text-align: center;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }
</style>
<!-- <div class="page-widths">
    <div class="main-compares">

        <ul class="product-list">
            <li id="whereToPlaceSelect">

            </li>

        </ul>
    </div>
</div> -->
<div class="sp_compare_tbl">
    <div class="sa_border">
        <ul class="sp_product_heading cxht">
            <li class="sp_image" style="height: 158px;">Image</li>
            <li class="sp_title">Title</li>
            <li class="sp_price">Price</li>
            <li class="sp_ptype">Total Cooking Area (sq. in.)</li>
            <li class="sp_desc">Assembly Time</li>
            <li data="sp_id_capital" class="sp_wifienabledpidcontroller">
                Power Source</li>
            <li data="sp_id_capital" class="sp_temperatureprobes"># Of Grill Grates</li>
            <li data="sp_id_capital" class="sp_grillgratematerial">Max Temperature (°F)
            </li>
            <li data="sp_id_capital" class="sp_stainlesssteelffs">Hopper capacity (Lbs)</li>
            <li data="sp_id_capital" class="sp_stainlesssteelbarrel">
                Assembled Dimensions (in.)
            </li>
            <li data="sp_id_capital" class="sp_directflamegrilling">Assembled Weight (Lbs)
            </li>
            <li data="sp_id_capital" class="sp_warranty">PID Controller</li>
            <li data="sp_id_capital" class="sp_interiorlighting">Meat Probes</li>
            <li data="sp_id_capital" class="sp_castirondeflector">Feed/Prime Function<br>
                (For faster heatup & more smoke)</li>
            <li data="sp_id_capital" class="sp_totalcookingspace">Manual Feed</li>
            <li data="sp_id_capital" class="sp_totalspacewithsecondshelf">
                Extra Insulation</li>
            <li data="sp_id_capital" class="sp_numberofgrillgrates">Convection-Style System
            </li>
            <li data="sp_id_capital" class="sp_minimumtemp">Pellet View Window</li>
            <li data="sp_id_capital" class="sp_maximumtemp">Pellet Hopper Cleanout</li>
            <li data="sp_id_capital" class="sp_riotmode">8-in-1 Cooking Versatility</li>
            <li data="sp_id_capital" class="sp_assemblytime">Grease Bucket</li>
            <li data="sp_id_capital" class="sp_hoppercapacity">Storage</li>

            <li data="sp_id_capital" class="sp_minimumtemp">Locking Casters</li>
            <li data="sp_id_capital" class="sp_maximumtemp">Grill Cover</li>
            <li data="sp_id_capital" class="sp_riotmode">Stainless steel grill lid</li>
            <li data="sp_id_capital" class="sp_assemblytime">Stainless Steel Hopper Lid</li>
            <li data="sp_id_capital" class="sp_hoppercapacity">Stainless Steel Handle</li>
            <li data="sp_id_capital" class="sp_hoppercapacity">Porcelain-coated steel Grills grate</li>
        </ul>
        <div class="sp_product" id="sp_product">
            <ul class="sp_product_con fill_cmp cxht">
                <li class="sp_image" style="height: 158px;">
                    <p class="sp_add_title">Add a Product</p>
                </li>
                <li class="sp_title"></li>
                <li class="sp_price"></li>
                <li class="sp_ptype"></li>
                <li class="description"></li>
                <li class="sp_wifienabledpidcontroller same_cl"></li>
                <li class="sp_temperatureprobes same_cl"></li>
                <li class="sp_grillgratematerial same_cl"></li>
                <li class="sp_stainlesssteelffs same_cl"></li>
                <li class="sp_stainlesssteelbarrel same_cl"></li>
                <li class="sp_directflamegrilling same_cl"></li>
                <li class="sp_warranty same_cl"></li>
                <li class="sp_interiorlighting same_cl"></li>
                <li class="sp_castirondeflector same_cl"></li>
                <li class="sp_totalcookingspace same_cl"></li>
                <li class="sp_totalspacewithsecondshelf same_cl"></li>
                <li class="sp_numberofgrillgrates same_cl"></li>
                <li class="sp_minimumtemp same_cl"></li>
                <li class="sp_maximumtemp same_cl"></li>
                <li class="sp_riotmode same_cl"></li>
                <li class="sp_assemblytime same_cl"></li>
                <li class="sp_hoppercapacity same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
            </ul>
            <ul class="sp_product_con fill_cmp cxht">
                <li class="sp_image" style="height: 158px;">
                    <p class="sp_add_title">Add a Product</p>

                </li>
                <li class="sp_title"></li>
                <li class="sp_price"></li>
                <li class="sp_ptype"></li>
                <li class="description"></li>
                <li class="sp_wifienabledpidcontroller same_cl"></li>
                <li class="sp_temperatureprobes same_cl"></li>
                <li class="sp_grillgratematerial same_cl"></li>
                <li class="sp_stainlesssteelffs same_cl"></li>
                <li class="sp_stainlesssteelbarrel same_cl"></li>
                <li class="sp_directflamegrilling same_cl"></li>
                <li class="sp_warranty same_cl"></li>
                <li class="sp_interiorlighting same_cl"></li>
                <li class="sp_castirondeflector same_cl"></li>
                <li class="sp_totalcookingspace same_cl"></li>
                <li class="sp_totalspacewithsecondshelf same_cl"></li>
                <li class="sp_numberofgrillgrates same_cl"></li>
                <li class="sp_minimumtemp same_cl"></li>
                <li class="sp_maximumtemp same_cl"></li>
                <li class="sp_riotmode same_cl"></li>
                <li class="sp_assemblytime same_cl"></li>
                <li class="sp_hoppercapacity same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
            </ul>
            <ul class="sp_product_con fill_cmp cxht">
                <li class="sp_image" style="height: 158px;">
                    <p class="sp_add_title">Add a Product</p>

                </li>
                <li class="sp_title"></li>
                <li class="sp_price"></li>
                <li class="sp_ptype"></li>
                <li class="description"></li>
                <li class="sp_wifienabledpidcontroller same_cl"></li>
                <li class="sp_temperatureprobes same_cl"></li>
                <li class="sp_grillgratematerial same_cl"></li>
                <li class="sp_stainlesssteelffs same_cl"></li>
                <li class="sp_stainlesssteelbarrel same_cl"></li>
                <li class="sp_directflamegrilling same_cl"></li>
                <li class="sp_warranty same_cl"></li>
                <li class="sp_interiorlighting same_cl"></li>
                <li class="sp_castirondeflector same_cl"></li>
                <li class="sp_totalcookingspace same_cl"></li>
                <li class="sp_totalspacewithsecondshelf same_cl"></li>
                <li class="sp_numberofgrillgrates same_cl"></li>
                <li class="sp_minimumtemp same_cl"></li>
                <li class="sp_maximumtemp same_cl"></li>
                <li class="sp_riotmode same_cl"></li>
                <li class="sp_assemblytime same_cl"></li>
                <li class="sp_hoppercapacity same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
            </ul>
            <ul class="sp_product_con fill_cmp cxht">
                <li class="sp_image" style="height: 158px;">
                    <p class="sp_add_title">Add a Product</p>

                </li>
                <li class="sp_title"></li>
                <li class="sp_price"></li>
                <li class="sp_ptype"></li>
                <li class="description"></li>
                <li class="sp_wifienabledpidcontroller same_cl"></li>
                <li class="sp_temperatureprobes same_cl"></li>
                <li class="sp_grillgratematerial same_cl"></li>
                <li class="sp_stainlesssteelffs same_cl"></li>
                <li class="sp_stainlesssteelbarrel same_cl"></li>
                <li class="sp_directflamegrilling same_cl"></li>
                <li class="sp_warranty same_cl"></li>
                <li class="sp_interiorlighting same_cl"></li>
                <li class="sp_castirondeflector same_cl"></li>
                <li class="sp_totalcookingspace same_cl"></li>
                <li class="sp_totalspacewithsecondshelf same_cl"></li>
                <li class="sp_numberofgrillgrates same_cl"></li>
                <li class="sp_minimumtemp same_cl"></li>
                <li class="sp_maximumtemp same_cl"></li>
                <li class="sp_riotmode same_cl"></li>
                <li class="sp_assemblytime same_cl"></li>
                <li class="sp_hoppercapacity same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
                <li class="same_cl"></li>
            </ul>
        </div>
    </div>

</div>
{% assign product_info_json = page.metafields.global.comparison_parameters.value %}
<script>

    var allProductInfo = {{ product_info_json | json }};

    document.addEventListener('DOMContentLoaded', function () {
        var params = new URLSearchParams(window.location.search);
        var productHandles = params.get('handles');
        var numberOfSelects = 4; // 总共需要展示的产品数量

        // 是否有提供 handles 参数
        if (productHandles) {
            var handlesArray = productHandles.split(',');
            var handlesCount = handlesArray.length;

            // 为每个 handles 参数加载产品信息
            handlesArray.forEach(function (handle, index) {
                fetchProductInfoByHandle(handle, index);
            });

            // 生成剩余的下拉选择框
            for (var i = handlesCount; i < numberOfSelects; i++) {
                fetchAndCreateSelect(i);
            }
        } else {
            // 没有 handles 参数时，为所有列生成下拉选择框
            for (var i = 0; i < numberOfSelects; i++) {
                fetchAndCreateSelect(i);
            }
        }


        const rows = document.querySelectorAll('.cxht');
        const numItemsPerRow = rows[0].children.length;

        for (let i = 0; i < numItemsPerRow; i++) {
            let maxHeight = 0;

            // 查找同一行的最大高度
            rows.forEach(row => {
                const item = row.children[i];
                if (item.offsetHeight > maxHeight) {
                    maxHeight = item.offsetHeight;
                }
            });

            // 设置同一行的所有元素的高度
            rows.forEach(row => {
                row.children[i].style.height = maxHeight + 'px';
            });
        }
    });


    function productImg(Dom, Class) {
        // 创建Swiper的整体结构
        var swiperHtml = '<div class="swiper-container">';
        swiperHtml += '<div class="swiper-wrapper">';

        // 为每个图片URL创建一个slide
        Dom.forEach((imgUrl) => {
            swiperHtml += "<div class='swiper-slide'><img class='img lazyload' data-src='" + imgUrl + "'></div>";
        });

        swiperHtml += '</div>'; // 关闭swiper-wrapper

        // 添加Swiper的导航按钮
        swiperHtml += '<div class="swiper-button-prev nextprev"></div>';
        swiperHtml += '<div class="swiper-button-next custnext"></div>';

        swiperHtml += '</div>'; // 关闭swiper-container

        // 将Swiper结构添加到指定的容器中
        Class.html(swiperHtml);

        // 初始化Swiper
        new Swiper('.swiper-container', {
            // Swiper选项
            loop: true,
            lazy: {
                loadPrevNext: true,
            },
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            // 其他选项...
        });
    }





    function fetchProductInfoByHandle(handle, index) {
        console.log("Fetching product info for handle:", handle, "at index:", index);
        $.get('/products/' + handle + '.js', function (response) {
            var product = JSON.parse(response);
            var productImages = product.images;  // 这里定义了productImages

            // 定位到正确的列 (sp_product_con)
            var $spProductCon = $('.sp_product .sp_product_con').eq(index);

            // 清空之前的图片并调用productImg函数生成轮播图
            var $imageContainer = $spProductCon.find('.sp_image');
            $imageContainer.empty();
            productImg(productImages, $imageContainer);  // 使用productImages变量

            // 更新产品信息
            // $spProductCon.find('.sp_image').html('<a href="javascript:void(0)"><img src="' + product.featured_image + '" alt="' + product.title + '"></a>');
            $spProductCon.find('.sp_title').text(product.title);
            $spProductCon.find('.sp_price').text(product.price);
            // 如果存在额外信息，填充到对应的元素中
            if (allProductInfo[handle]) {
                console.log("Extra product info found:", allProductInfo[handle]);
                Object.keys(allProductInfo[handle]).forEach(function (key) {
                    $spProductCon.find('.' + key).text(allProductInfo[handle][key]);
                });
            }

            // 添加关闭按钮逻辑
            var closeButtonHtml = '<button class="close-btn">X</button>';
            $spProductCon.find('.sp_image').prepend(closeButtonHtml);
            $spProductCon.find('.close-btn').on('click', function () {
                // 清除当前列的内容
                $spProductCon.find('li').empty();

                // 重新添加 "Add a Product" 文字
                var addProductHtml = '<p class="sp_add_title">Add a Product</p>';
                $spProductCon.find('.sp_image').append(addProductHtml);
                // 重新生成下拉选择框
                fetchAndCreateSelect(index);
                removeHandleFromURL(handle);
            });
        }).fail(function () {
            console.error("Error fetching product information for handle:", handle);
        });
    }




    function fetchAndCreateSelect(index) {
        // 检查下拉框是否已经存在
        var existingSelect = $('#productSelect' + index);
        if (existingSelect.length > 0) {
            return; // 如果下拉框已存在，不再创建新的
        }

        $.get('/collections/wood-pellet-grills/products.json', function (data) {
            var products = data.products;
            var selectHtml = '<select id="productSelect' + index + '">';

            // 添加默认选项
            selectHtml += '<option value="">Select product</option>';

            products.forEach(function (product) {
                selectHtml += '<option value="' + product.handle + '">' + product.title + '</option>';
            });

            selectHtml += '</select>';

            var $spImage = $('.sp_product').find('.sp_image').eq(index);
            $spImage.append(selectHtml); // 确保先清空已有内容

            $('#productSelect' + index).on('change', function () {
                var selectedHandle = $(this).val();
                if (selectedHandle) {
                    fetchProductInfoByHandle(selectedHandle, index);
                }
            });
        }).fail(function () {
            console.error("Error fetching products from the collection");
        });
    }



    function removeHandleFromURL(handle) {
        var url = new URL(window.location.href);
        var params = url.searchParams;
        var handles = params.get('handles') ? params.get('handles').split(',') : [];
        var updatedHandles = handles.filter(h => h !== handle);

        if (updatedHandles.length > 0) {
            params.set('handles', updatedHandles.join(','));
        } else {
            params.delete('handles');
        }

        // 更新页面地址栏
        window.history.replaceState({}, '', url.toString());
    }


</script>